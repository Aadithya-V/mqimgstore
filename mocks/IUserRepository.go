// Code generated by mockery v2.36.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"

	users "github.com/Aadithya-V/mqimgstore/users"
)

// IUserRepository is an autogenerated mock type for the IUserRepository type
type IUserRepository struct {
	mock.Mock
}

// GetUserByID provides a mock function with given fields: id
func (_m *IUserRepository) GetUserByID(id int64) (users.User, error) {
	ret := _m.Called(id)

	var r0 users.User
	var r1 error
	if rf, ok := ret.Get(0).(func(int64) (users.User, error)); ok {
		return rf(id)
	}
	if rf, ok := ret.Get(0).(func(int64) users.User); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Get(0).(users.User)
	}

	if rf, ok := ret.Get(1).(func(int64) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewIUserRepository creates a new instance of IUserRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIUserRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *IUserRepository {
	mock := &IUserRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
