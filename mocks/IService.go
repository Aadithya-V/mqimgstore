// Code generated by mockery v2.36.0. DO NOT EDIT.

package mocks

import (
	product "github.com/Aadithya-V/mqimgstore/product"
	mock "github.com/stretchr/testify/mock"
)

// IService is an autogenerated mock type for the IService type
type IService struct {
	mock.Mock
}

// AddProduct provides a mock function with given fields: addableProduct
func (_m *IService) AddProduct(addableProduct product.AddableProduct) error {
	ret := _m.Called(addableProduct)

	var r0 error
	if rf, ok := ret.Get(0).(func(product.AddableProduct) error); ok {
		r0 = rf(addableProduct)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewIService creates a new instance of IService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIService(t interface {
	mock.TestingT
	Cleanup(func())
}) *IService {
	mock := &IService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
